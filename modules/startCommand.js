const { Markup } = require('telegraf');
const db = require('../db'); // –ü–æ–¥–∫–ª—é—á–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö

function setupStartCommand(bot) {
  bot.start((ctx) => {
    const user = ctx.from;
    const userId = user.id;
    const username = user.username || '–±–µ–∑ username';
    const firstName = user.first_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
    const lastName = user.last_name || '';

    console.log(`üöÄ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${firstName} (@${username}), ID: ${userId}`);

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    const query = `
      INSERT OR IGNORE INTO users (id, username, first_name, last_name)
      VALUES (?, ?, ?, ?)
    `;
    db.run(query, [userId, username, firstName, lastName], (err) => {
      if (err) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö:', err.message);
      } else {
        console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.');
      }
    });

    ctx.reply(`–ü—Ä–∏–≤–µ—Ç, ${firstName}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å üëã`);

    ctx.reply(
      '–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π —Ñ–∏—Ç–Ω–µ—Å-–±–æ—Ç. –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:',
      Markup.inlineKeyboard([
        [Markup.button.callback('üèãÔ∏è‚Äç‚ôÇÔ∏è –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏', 'workouts')],
        [Markup.button.callback('üçè –ü–∏—Ç–∞–Ω–∏–µ', 'nutrition')],
        [Markup.button.callback('üìä –ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å', 'progress')],
        [Markup.button.callback('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', 'settings')],
        [Markup.button.callback('–ê–ª–ª–æ?', 'joke')],
      ])
    );
  });
}

module.exports = setupStartCommand;